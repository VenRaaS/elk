input {
	file {
		path => "/tmp/goods.tsv"
#		path => "/tmp/goods.tsv.top5"
		start_position => "beginning"
		
		# set type in @metadata without pass it to destination
		# @metadata - https://www.elastic.co/guide/en/logstash/5.6/event-dependent-configuration.html#metadata
		add_field => { "[@metadata][type]" => "goods" } 
	}

#	file {
#		path => "/tmp/momo_category.tsv"
#		start_position => "beginning"
#		type => "category"
#	}

#	file {
#		path => "/tmp/group2category_mapping.tsv"
#		start_position => "beginning"
#		type => "group2category"
#	}
#
#	file {
#		path => "/tmp/group_sort.tsv"
#		start_position => "beginning"
#		type => "group_sort"
#	}
#
#	file {
#		path => "/tmp/group_feat_rank.tsv"
#		start_position => "beginning"
#		type => "group_feat_rank"
#	}

#	file {
#		path => "/tmp/group2gid.tsv"
#		start_position => "beginning"
#		type => "group2gid"
#	}

}

filter {
	if [@metadata][type] == "goods"  {
		csv {
			columns => [ "code_name", "gid", "pgid", "goods_name", "goods_keyword", "goods_brand", "goods_describe", "goods_spec", "goods_img_url", "availability", "currency", "sale_price", "provider", "barcode_ean13", "barcode_upc", "first_rts_date", "update_time" ]
			separator => "	"
			skip_empty_columns => true
		}

		ruby {
			#-- set index suffix with update date 
			#   event API - https://www.elastic.co/guide/en/logstash/5.6/event-api.html#_event_api 
			code => "event.set('[@metadata][dt]', event.get('update_time')[0..9])"
		}

		ruby {
			code => "event.set('[@metadata][code_name]', event.get('code_name'))"
		}

		mutate {
			remove_field => [ "message", "host", "path", "@version", "@timestamp", "file", "offset", "code_name" ]
		}
	}

	if [@metadata][type] == "category"  {
		csv {
			columns => [ "code_name", "_combo_id", "category_code", "p_category_code", "category_name", "le", "update_time" ]
			separator => "	"
		}

		mutate {
			remove_field => [ "message", "host", "path", "@version", "@timestamp", "file", "offset" ]
		}
	}

	if [@metadata][type] == "group2category"  {
		csv {
			columns => [ "code_name", "_combo_id", "group_id", "category_code", "update_time" ]
			separator => "	"
		}

		mutate {
			remove_field => [ "message", "host", "path", "@version", "@timestamp", "file", "offset" ]
		}
	}

	if [@metadata][type] == "group_sort"  {
		csv {
			columns => [ "code_name", "group_id", "group_name", "sort", "update_time" ]
			separator => "	"
		}

		mutate {
			remove_field => [ "message", "host", "path", "@version", "@timestamp", "file", "offset" ]
		}
	}

	if [@metadata][type] == "group_feat_rank"  {
		csv {
			columns => [ "code_name", "rank", "update_time" ]
			separator => "	"
		}

		mutate {
			remove_field => [ "message", "host", "path", "@version", "@timestamp", "file", "offset" ]
		}
	}
    
	if [@metadata][type] == "group2gid" {
		csv {
			columns => [ "code_name", "id", "group_id", "gid", "update_time" ]
			separator => "	"
		}

		mutate {
			remove_field => [ "message", "host", "path", "@version", "@timestamp", "file", "offset" ]
		}
	}

}

output {
	elasticsearch { 
		hosts => ["elk-v563:9200"]
		index => "%{[@metadata][code_name]}_gocc_%{[@metadata][dt]}"
		document_type => "%{[@metadata][type]}"
		document_id => "%{gid}"
	}

#	stdout { 
#		codec => rubydebug 
#		codec => json 
#	}
}

