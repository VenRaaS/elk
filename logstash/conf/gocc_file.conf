input {
	file {
		path => "/tmp/goods.tsv"
		start_position => "beginning"
		
		# set type in @metadata without pass it to destination
		# @metadata - https://www.elastic.co/guide/en/logstash/5.6/event-dependent-configuration.html#metadata
		add_field => { "[@metadata][type]" => "goods" } 
	}

	file {
		path => "/tmp/category.tsv"
		start_position => "beginning"
		add_field => { "[@metadata][type]" => "category" } 
	}

	file {
		path => "/tmp/goodscatecode.tsv"
		start_position => "beginning"
		add_field => { "[@metadata][type]" => "goodscatecode" } 
	}

	file {
		path => "/tmp/group2category.tsv"
		start_position => "beginning"
		add_field => { "[@metadata][type]" => "group2category" }
	}

	file {
		path => "/tmp/group_sort.tsv"
		start_position => "beginning"
		add_field => { "[@metadata][type]" => "group_sort" }
	}

	file {
		path => "/tmp/group_feat_rank.tsv"
		start_position => "beginning"
		add_field => { "[@metadata][type]" => "group_feat_rank" }
	}

	file {
		path => "/tmp/group2gid.tsv"
		start_position => "beginning"
		add_field => { "[@metadata][type]" => "group2gid" }
	}

}

filter {
	if [@metadata][type] == "goods"  {
		csv {
			columns => [ "code_name", "gid", "pgid", "goods_name", "goods_keyword", "goods_brand", "goods_describe", "goods_spec", "goods_img_url", "availability", "currency", "sale_price", "provider", "barcode_ean13", "barcode_upc", "first_rts_date", "update_dt" ]
			separator => "	"
			skip_empty_columns => true
		}

		ruby {
			#-- extract datetime only
			code => 'event.set("[first_rts_date]", event.get("first_rts_date")[0..18])'
		}

		mutate {
    			add_field => { "[@metadata][did]" => "%{gid}" }
		}
	}

	if [@metadata][type] == "category"  {
		csv {
			columns => [ "code_name", "category_code", "p_category_code", "category_name", "le", "update_dt" ]
			separator => "	"
			skip_empty_columns => true
		}
	}

	if [@metadata][type] == "goodscatecode"  {
		csv {
			columns => [ "code_name", "gid", "category_code", "le", "sort", "func_type", "update_dt" ]
			separator => "	"
			skip_empty_columns => true
		}
	}

	if [@metadata][type] == "group2category"  {
		csv {
			columns => [ "code_name", "group_id", "category_code", "update_dt" ]
			separator => "	"
			skip_empty_columns => true
		}
	}

	if [@metadata][type] == "group_sort"  {
		csv {
			columns => [ "code_name", "group_id", "group_name", "sort", "update_dt" ]
			separator => "	"
			skip_empty_columns => true
		}
	}

	if [@metadata][type] == "group_feat_rank"  {
		csv {
			columns => [ "code_name", "rank", "update_dt" ]
			separator => "	"
			skip_empty_columns => true
		}
	}
    
	if [@metadata][type] == "group2gid" {
		csv {
			columns => [ "code_name", "group_id", "gid", "update_dt" ]
			separator => "	"
			skip_empty_columns => true
		}
	}

	ruby {
		#-- set index suffix with update date 
		#   event API - https://www.elastic.co/guide/en/logstash/5.6/event-api.html#_event_api 
		code => 'event.set("[@metadata][date]", event.get("update_dt")[0..9])'
	}

	ruby {
		#-- extract datetime only
		code => 'event.set("[update_dt]", event.get("update_dt")[0..18])'
	}

	ruby {
		code => "event.set('[@metadata][code_name]', event.get('code_name'))"
	}
	
	mutate {
		remove_field => [ "code_name" ]
	}

	mutate {
		remove_field => [ "message", "host", "path", "@version", "@timestamp", "file", "offset" ]
	}
}

output {
	if [@metadata][did] {
		elasticsearch { 
			hosts => ["elk-v563:9200"]
			index => "%{[@metadata][code_name]}_gocc_%{[@metadata][date]}"
			document_type => "%{[@metadata][type]}"
			document_id => "%{[@metadata][did]}"
		}
	} else {
		elasticsearch {
			hosts => ["elk-v563:9200"]
			index => "%{[@metadata][code_name]}_gocc_%{[@metadata][date]}"
			document_type => "%{[@metadata][type]}"
		}
	}

#	stdout { 
#		codec => rubydebug 
#		codec => json 
#	}

}

