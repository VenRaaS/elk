input {
	file {
		path => "/tmp/tmp_ecgoods.tsv"
		start_position => "beginning"
		type => "goods"
	}

#	file {
#		path => "/tmp/group2category_mapping.tsv"
#		start_position => "beginning"
#		type => "group2category"
#	}
#
#	file {
#		path => "/tmp/group_sort.tsv"
#		start_position => "beginning"
#		type => "group_sort"
#	}
#
#	file {
#		path => "/tmp/group_feat_rank.tsv"
#		start_position => "beginning"
#		type => "group_feat_rank"
#	}

}

filter {
	if [type] == "goods"  {
		csv {
			columns => [ "code_name", "gid", "pgid", goods_name, goods_keyword, goods_brand, goods_describe, goods_spec, goods_img_url, availability, currency, sale_price, provider, barcode_ean13, barcode_upc, first_rts_date, update_time ]
			separator => "	"
		}

		mutate {
			remove_field => [ "message", "host", "path", "@version", "@timestamp", "file", "offset" ]
		}
	}

	if [type] == "group2category"  {
		csv {
			columns => [ "code_name", "_combo_id", "group_id", "category_code", "update_time" ]
			separator => "	"
		}

		mutate {
			remove_field => [ "message", "host", "path", "@version", "@timestamp", "file", "offset" ]
		}
	}

	if [type] == "group_sort"  {
		csv {
			columns => [ "code_name", "group_id", "group_name", "sort", "update_time" ]
			separator => "	"
		}

		mutate {
			remove_field => [ "message", "host", "path", "@version", "@timestamp", "file", "offset" ]
		}
	}

	if [type] == "group_feat_rank"  {
		csv {
			columns => [ "code_name", "rank", "update_time" ]
			separator => "	"
		}

		mutate {
			remove_field => [ "message", "host", "path", "@version", "@timestamp", "file", "offset" ]
		}
	}
}

output {
	elasticsearch { 
		host => ["es-node-01:9300"]
		cluster => "westernwall"
		index => "%{code_name}_gocc"
		document_type => "%{type}"
	}

#	stdout { 
#		codec => rubydebug 
#		codec => json 
#	}
	
}
