input {
	file {
		path => "/tmp/*_goods_*.tsv"
		start_position => "beginning"
		type => "goods"
	}

	file {
		path => "/tmp/*_category_*.tsv"
		start_position => "beginning"
		type => "category"
	}

#	file {
#		path => "/tmp/group2category_mapping.tsv"
#		start_position => "beginning"
#		type => "group2category"
#	}
#
#	file {
#		path => "/tmp/group_sort.tsv"
#		start_position => "beginning"
#		type => "group_sort"
#	}
#
#	file {
#		path => "/tmp/group_feat_rank.tsv"
#		start_position => "beginning"
#		type => "group_feat_rank"
#	}

#	file {
#		path => "/tmp/group2gid.tsv"
#		start_position => "beginning"
#		type => "group2gid"
#	}

}

filter {
        grok {
           #     match => { "path" => "%{NUMBER:[@metadata][date]}.tsv" }
		#-- extract date from the suffix of filename and set into [@metadata][date]
		#   https://www.elastic.co/guide/en/logstash/1.5/plugins-filters-grok.html#_custom_patterns
                match => { "path" => "(?<file_suffix_date>(19|20)\d\d(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])).tsv" }
                add_field => { "[@metadata][date]" => "%{file_suffix_date}" }
                remove_field => [ "file_suffix_date" ]
            }  

	if [type] == "goods"  {
		csv {
			columns => [ "code_name", "gid", "pgid", goods_name, goods_keyword, goods_brand, goods_describe, goods_spec, goods_img_url, availability, currency, sale_price, provider, barcode_ean13, barcode_upc, first_rts_date, update_time ]
			separator => "	"
		}

		mutate {
                        add_field => { "[@metadata][did]" => "%{gid}"   
                                       "[@metadata][code_name]" => "%{code_name}" 
                                     }
                        remove_field => [ "code_name","goods_describe","message", "host", "path", "@version", "@timestamp", "file", "offset" ]
		}


	}

	if [type] == "category"  {
		csv {
			columns => [ "code_name", "_combo_id", "category_code", "p_category_code", "category_name", "le", "update_time" ]
			separator => "	"
		}
		mutate {
                        add_field => {"[@metadata][code_name]" => "%{code_name}"}
			remove_field => ["code_name","_combo_id", "message", "host", "path", "@version", "@timestamp", "file", "offset" ]
		}
	}

	if [type] == "group2category"  {
		csv {
			columns => [ "code_name", "_combo_id", "group_id", "category_code", "update_time" ]
			separator => "	"
		}

		mutate {
			remove_field => [ "message", "host", "path", "@version", "@timestamp", "file", "offset" ]
		}
	}

	if [type] == "group_sort"  {
		csv {
			columns => [ "code_name", "group_id", "group_name", "sort", "update_time" ]
			separator => "	"
		}

		mutate {
			remove_field => [ "message", "host", "path", "@version", "@timestamp", "file", "offset" ]
		}
	}

	if [type] == "group_feat_rank"  {
		csv {
			columns => [ "code_name", "rank", "update_time" ]
			separator => "	"
		}

		mutate {
			remove_field => [ "message", "host", "path", "@version", "@timestamp", "file", "offset" ]
		}
	}
    
	if [type] == "group2gid" {
		csv {
			columns => [ "code_name", "id", "group_id", "gid", "update_time" ]
			separator => "	"
		}

		mutate {
			remove_field => [ "message", "host", "path", "@version", "@timestamp", "file", "offset" ]
		}
	}

}

output {
	 if [@metadata][did] 
       {
         elasticsearch { 
		host => ["es-node-01:9300"]
		cluster => "westernwall"
		index => "%{[@metadata][code_name]}_gocc_%{[@metadata][date]}"
		document_type => "%{type}"
                document_id => "%{[@metadata][did]}"
	
         }
       }
       else
       {
          elasticsearch { 
               	host => ["es-node-01:9300"]                 
        	cluster => "westernwall"
               	index => "%{[@metadata][code_name]}_gocc_%{[@metadata][date]}"
               	document_type => "%{type}"           
           }
       }

# stdout {
#		codec => rubydebug  { metadata => true }
#		codec => json 
#   	}
	
}
