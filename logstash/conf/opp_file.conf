input {
	file {
		path => "/tmp/opp/*.tsv"
		start_position => "beginning"
		
		# set type in @metadata without pass it to destination
		# @metadata - https://www.elastic.co/guide/en/logstash/5.6/event-dependent-configuration.html#metadata
		add_field => { "[@metadata][type]" => "opp" } 
	}
}

filter {
	if [@metadata][type] == "opp"  {
		csv {
			columns => [ "code_name", "action", "uid", "ven_guid", "ven_session", "cc_guid", "cc_session", "device", "gid", "category_code", "category_code_le", "client_ip", "page_type", "uri", "referrer", "referrer_host", "geo_location", "insert_dt" ]
			separator => "	"
			skip_empty_columns => true
		}

		mutate {
			remove_field => [ "message", "host", "path", "@version", "@timestamp", "file", "offset" ]
		}
	}
    
	if [@metadata][type] == "group2gid" {
		csv {
			columns => [ "code_name", "group_id", "gid", "update_dt" ]
			separator => "	"
		}

		mutate {
    			add_field => { "[@metadata][did]" => "%{group_id}_%{gid}" }

			remove_field => [ "message", "host", "path", "@version", "@timestamp", "file", "offset" ]
		}
	}

	ruby {
		#-- set index suffix with update date 
		#   event API - https://www.elastic.co/guide/en/logstash/5.6/event-api.html#_event_api 
		code => "event.set('[@metadata][dt]', event.get('insert_dt')[0..9])"
	}

	ruby {
		code => "event.set('[@metadata][code_name]', event.get('code_name'))"
	}
	
	mutate {
		remove_field => [ "code_name" ]
	}
}

output {
	if [@metadata][type] != "opp" {
		elasticsearch { 
			hosts => ["elk-v563:9200"]
			index => "%{[@metadata][code_name]}_gocc_%{[@metadata][dt]}"
			document_type => "%{[@metadata][type]}"
	}
	
	if [@metadata][type] != "oua" {
		elasticsearch {
			hosts => ["elk-v563:9200"]
			index => "%{[@metadata][code_name]}_gocc_%{[@metadata][dt]}"
			document_type => "%{[@metadata][type]}"
		}
	}

#	stdout { 
#		codec => rubydebug 
#		codec => json 
#	}
}

