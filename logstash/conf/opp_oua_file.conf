input {
	file {
		path => "/tmp/opp/*.tsv"
		start_position => "beginning"
		
		# set type in @metadata without pass it to destination
		# @metadata - https://www.elastic.co/guide/en/logstash/5.6/event-dependent-configuration.html#metadata
		add_field => { "[@metadata][type]" => "opp" } 
	}
}

filter {
	if [@metadata][type] == "opp"  {
		csv {
			columns => [ "code_name", "action", "uid", "ven_guid", "ven_session", "cc_guid", "cc_session", "device", "gid", "category_code", "category_code_le", "client_ip", "page_type", "uri", "referrer", "referrer_host", "geo_location", "insert_dt" ]
			separator => "	"
			skip_empty_columns => true
		}

		mutate {
			remove_field => [ "message", "host", "path", "@version", "@timestamp", "file", "offset" ]
		}
	}

	#-- generates event for Online User Alignment
	clone {
		clones => ["oua"]
	}

	if [type] == "oua" {
                if ! [ven_guid] or ! [uid] {
			drop {}
                }
	
		#-- change set document_type 
		mutate {
			remove_field => [ "[@metadata][type]", "type" ]
		        add_field => { "[@metadata][type]" => "oua" } 
		}
		
		mutate {
			remove_field => [ "action", "ven_session", "cc_guid", "cc_session", "gid", "category_code", "category_code_le", "client_ip", "page_type", "uri", "referrer", "referrer_host", "geo_location" ]
			remove_field => [ "message", "host", "path", "@version", "@timestamp", "file", "offset" ]
		}
	}

	ruby {
		#-- set index suffix with update date 
		#   event API - https://www.elastic.co/guide/en/logstash/5.6/event-api.html#_event_api 
		code => "event.set('[@metadata][dt]', event.get('insert_dt')[0..9])"
	}

	ruby {
		code => "event.set('[@metadata][code_name]', event.get('code_name'))"
	}
	
	mutate {
		remove_field => [ "code_name" ]
	}
}

output {
	if [@metadata][type] == "opp" {
		elasticsearch { 
			hosts => ["elk-v563:9200"]
			index => "%{[@metadata][code_name]}_opp_%{[@metadata][dt]}"
			document_type => "%{[@metadata][type]}"
		}
	}
	
	if [@metadata][type] == "oua" {
		elasticsearch {
			hosts => ["elk-v563:9200"]
			index => "%{[@metadata][code_name]}_oua_%{[@metadata][dt]}"
			document_type => "%{[@metadata][type]}"
		}
	}

#	stdout { 
#		codec => rubydebug { metadata => true }
#		codec => rubydebug 
#		codec => json 
#	}

}

