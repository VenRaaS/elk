###
### sync GOCC with Json form into ES an Index Per Day
###

input {
    file {
        path => "/tmp/gocc2xs_update/*_goods_*.json"
        start_position => "beginning"
        add_field => { "[@metadata][type]" => "goods" }
        codec => "json"
    }

#    file {
#        path => "/tmp/gocc2xs/*_category_*.json"
#        start_position => "beginning"
#        add_field => { "[@metadata][type]" => "category" }
#        codec => "json"
#    }
}

filter {
    grok {
#        match => { "path" => "%{NUMBER:[@metadata][date]}.tsv" }
        #-- extract date from the suffix of filename and set into [@metadata][date]
        #   https://www.elastic.co/guide/en/logstash/1.5/plugins-filters-grok.html#_custom_patterns
        match => { "path" => "(?<file_suffix_date>(19|20)\d\d(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])).json" }
        add_field => { "[@metadata][date]" => "%{file_suffix_date}" }
        remove_field => [ "file_suffix_date" ]
    }

    if [@metadata][type] == "goods"  {
        mutate {
            add_field => { "[@metadata][did]" => "%{gid}"
                           "[@metadata][code_name]" => "%{code_name}" 
                         }
            remove_field => [ "code_name", "goods_describe", "message", "host", "path", "@version", "@timestamp" ]
        }
    }

    if [@metadata][[type] == "category"  {
        mutate {
            add_field => {"[@metadata][code_name]" => "%{code_name}"}
            remove_field => [ "code_name", "_combo_id", "message", "host", "path", "@version", "@timestamp" ]
        }
    }
}

output {
    if [@metadata][did] 
    {
        elasticsearch { 
            action => "update"
            doc_as_upsert => true
            hosts => ["es-node-01:9200"]
            index => "%{[@metadata][code_name]}_gocc_%{[@metadata][date]}"
            document_type => "%{[@metadata][type]}"
            document_id => "%{[@metadata][did]}"
        }
    }
    else
    {
        elasticsearch {
            hosts => ["es-node-01:9200"]
            index => "%{[@metadata][code_name]}_gocc_%{[@metadata][date]}"
            document_type => "%{[@metadata][type]}"
        }
    }

#    stdout {
#        codec => rubydebug  { metadata => true }
##        codec => json 
#    }

}

