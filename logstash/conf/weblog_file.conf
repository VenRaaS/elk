input {
	file {
		path => "/opt/tomcat/logs/data"
		start_position => "beginning"
		sincedb_path => "/tmp/sincedb_weblog_daily"
		codec => "json"
	}
}


filter {
	#-- action json content
	if [pageload] {
		#-- remove Backslash
		mutate { gsub => ["pageload", "[\\]", ""] }

		#-- extract action content from json array
		json { source => "[pageload][0]" }
	} else if [cartload] {
		mutate { gsub => ["cartload", "[\\]", ""] }
		json { source => "[cartload][0]" }
	} else if [checkout] {
		mutate { gsub => ["checkout", "[\\]", ""] }
		json { source => "[checkout][0]" }
	} else if [po] {
		mutate { gsub => ["po", "[\\]", ""] }
		json { source => "[po][0]" }
	} else if [rep] {
		mutate { gsub => ["rep", "[\\]", ""] }
		json { source => "[rep][0]" }
	} else if [favadd] {
		mutate { gsub => ["favadd", "[\\]", ""] }
		json { source => "[favadd][0]" }
	} else if [favrm] {
		mutate { gsub => ["favrm", "[\\]", ""] }
		json { source => "[favrm][0]" }
	} else if [cartadd] {
		mutate { gsub => ["cartadd", "[\\]", ""] }
		json { source => "[cartadd][0]" }
	} else if [cartrm] {
		mutate { gsub => ["cartrm", "[\\]", ""] }
		json { source => "[cartrm][0]" }
	} else if [login] {
		mutate { gsub => ["login", "[\\]", ""] }
		json { source => "[login][0]" }
	} else if [logout] {
		mutate { gsub => ["logout", "[\\]", ""] }
		json { source => "[logout][0]" }
	} else {
		drop {}
	}
	
	mutate {
		add_field => { "[@metadata][type]" => "OnlinePref" }
	}

	#-- code_name
	if [code_name] {
		mutate {
			add_field => { "[code_name_clone]" => "%{[code_name][0]}" }
		}
	}

	#-- referrer_host
	grok {
		match => { "referrer" => "%{URIPATH:ref_path}" }
	}
	grok {
		match => { "ref_path" => "%{IPORHOST:referrer_host}" }
		remove_field => [ "ref_path" ]
	}

	#-- uri
	mutate {
		replace => { "uri" => "%{tophost}%{uri}" }
	}

	#-- client_ip
	mutate {
		#-- replace fieldname [client_ip][0] to [client] with add_field and remove_field
		gsub => [ "[client_ip][0]", "[ ]*", "" ]
		add_field => { "client" => "%{[client_ip][0]}" }
	}
	mutate {
		rename => { "client" => "client_ip" }
		split => { "client_ip" => "," }
	}

	mutate {
		rename => { "categ_code" => "category_code" }
		rename => { "categ_le" => "category_code_le" }
	}
	
	#-- insert_dt and insert_min_dt	
	grok {
		match => { "[api_logtime][0]" => "%{YEAR:yyyy}-%{MONTHNUM:MM}-%{MONTHDAY:dd}T%{TIME:HHmmssSSS}" }
		add_field => { "insert_min_dt" => "%{yyyy}-%{MM}-%{dd}T%{HHmmssSSS}" }
		add_field => { "insert_dt" => "%{yyyy}-%{MM}-%{dd}T%{HHmmssSSS}" }
		add_field => { "date_clone" => "%{yyyy}%{MM}%{dd}" }
	}
	mutate {
		remove_field => [ "yyyy", "MM", "dd", "HHmmssSSS" ]
	}


	#-- remove useless fields
	mutate {	 
		remove_field => [ "pageload", "cartload", "checkout", "po" , "rep" , "favadd" , "favrm" , "cartadd" , "cartrm" , "login" , "logout" ]
		remove_field => [ "agent", "request_method", "api_loghost", "api_logtime" ]
		remove_field => [ "autosend", "from_rec", "web", "ver", "client_tzo", "client_utc", "now_rec", "para" ]
		remove_field => [ "referrer", "client_host", "tophost", "client_ip" ]
		remove_field => [ "message", "host", "path", "@version", "@timestamp" ]
	}
	
	if [ven_guid] =~ /\S+/ and [uid] =~ /\S+/ {
		clone {
			# metadata isn't able to clone
			clones => ["OnlineUserAlign"]
		}

		if [type] == "OnlineUserAlign" {
			mutate {
				add_field => { "[@metadata][type]" => "OnlineUserAlign" }

				remove_field => [ "type" ]
				remove_field => [ "action", "ven_session", "cc_guid", "cc_session", "gid", "category_code", "category_code_le", "page_type", "uri", "referrer_host", "geo_location", "insert_dt" ]
				remove_field => [ "@version", "@timestamp" ]
			}
		}
	}

	mutate {
		# metadata isn't able to clone
		add_field => { "[@metadata][code_name]" => "%{code_name_clone}" }
		add_field => { "[@metadata][date]" => "%{date_clone}" }

		remove_field => [ "code_name", "code_name_clone", "token", "date_clone" ]
	}
}


output {
	if [@metadata][type] == "OnlinePref" {
		elasticsearch {
			host => ["es-node-01:9300"]
			cluster => "westernwall"
			index => "%{[@metadata][code_name]}_opp_%{[@metadata][date]}"
			document_typa => "OnlinePref"
		}
	}

	if [@metadata][type] == "OnlineUserAlign" {
		elasticsearch {
			host => ["es-node-01:9300"]
			cluster => "westernwall"
			index => "%{[@metadata][code_name]}_oua_%{[@metadata][date]}"
			document_typa => "OnlineUserAlign"
		}
	}

#	file {
#		path => "/tmp/weblog.lgs.out"
#	}

#	stdout { 
#		codec => rubydebug { metadata => true }
##		codec => json 
#	}
}
