input {
 	lumberjack {
 		port => 5043
 		ssl_certificate => "/etc/ssl/venraas-internal-logstash-forwarder.crt"
 		ssl_key => "/etc/ssl/venraas-internal-logstash-forwarder.key"
 		codec => "json"
 	}
}

filter {
	if [type] == "weblog" {
		#-- action json content
		if [pageload] {
			#-- remove Backslash
			mutate { gsub => ["pageload", "[\\]", ""] }

			#-- extract action content from json array
			json { source => "[pageload][0]" }
		} else if [cartload] {
			mutate { gsub => ["cartload", "[\\]", ""] }
			json { source => "[cartload][0]" }
		} else if [checkout] {
			mutate { gsub => ["checkout", "[\\]", ""] }
			json { source => "[checkout][0]" }
		} else if [po] {
			mutate { gsub => ["po", "[\\]", ""] }
			json { source => "[po][0]" }
		} else if [rep] {
			mutate { gsub => ["rep", "[\\]", ""] }
			json { source => "[rep][0]" }
		} else if [favadd] {
			mutate { gsub => ["favadd", "[\\]", ""] }
			json { source => "[favadd][0]" }
		} else if [favrm] {
			mutate { gsub => ["favrm", "[\\]", ""] }
			json { source => "[favrm][0]" }
		} else if [cartadd] {
			mutate { gsub => ["cartadd", "[\\]", ""] }
			json { source => "[cartadd][0]" }
		} else if [cartrm] {
			mutate { gsub => ["cartrm", "[\\]", ""] }
			json { source => "[cartrm][0]" }
		} else if [login] {
			mutate { gsub => ["login", "[\\]", ""] }
			json { source => "[login][0]" }
		} else if [logout] {
			mutate { gsub => ["logout", "[\\]", ""] }
			json { source => "[logout][0]" }
		} else {
			drop {}
		}
		
		#-- code_name
		grok {
			match => { "client_host" => "(?<code_name>[0-9A-Za-z][0-9A-Za-z-]{0,62})\." }
		}
		mutate { 
			gsub => ["code_name", "\.", ""]
		}

		#-- referrer_host
		grok {
			match => { "referrer" => "%{URIPATH:ref_path}" }
		}
		grok {
			match => { "ref_path" => "%{IPORHOST:referrer_host}" }
			remove_field => [ "ref_path" ]
		}

		#-- uri
		mutate {
			replace => { "uri" => "%{tophost}%{uri}" }
		}

		#-- client_ip
		mutate {
			#-- replace fieldname [client_ip][0] to [client] with add_field and remove_field
			gsub => [ "[client_ip][0]", "[ ]*", "" ]
			add_field => { "client" => "%{[client_ip][0]}" }
		}
		mutate {
			rename => { "client" => "client_ip" }
			split => { "client_ip" => "," }
		}

		mutate {
			rename => { "categ_code" => "category_code" }
			rename => { "categ_le" => "category_code_le" }
		}
		
		#-- insert_dt and insert_min_dt	
		grok {
			match => { "[api_logtime][0]" => "%{YEAR:yyyy}-%{MONTHNUM:MM}-%{MONTHDAY:dd}T%{TIME:HHmmssSSS}" }
			add_field => { "insert_min_dt" => "%{yyyy}-%{MM}-%{dd}T%{HHmmssSSS}" }
			add_field => { "insert_dt" => "%{yyyy}-%{MM}-%{dd}T%{HHmmssSSS}" }
		}
		mutate {
			remove_field => [ "yyyy", "MM", "dd", "HHmmssSSS" ]
		}


		#-- remove useless fields
		mutate {	 
			remove_field => [ "pageload", "cartload", "checkout", "po" , "rep" , "favadd" , "favrm" , "cartadd" , "cartrm" , "login" , "logout" ]
			remove_field => [ "agent", "request_method", "api_loghost", "api_logtime" ]
			remove_field => [ "autosend", "from_rec", "web", "ver", "client_tzo", "client_utc", "now_rec", "para" ]
			remove_field => [ "message", "host", "path", "@version", "@timestamp" ]
		}
	}
}

output {
	if [type] == "weblog" {
			elasticsearch {
			host => ["es-node-01:9300", "es-node-02:9300"]
			cluster => "westernwall"
			index => "%{code_name}_opp"
			document_type => "OnlinePref"
		}
	}

#	stdout { 
#		codec => rubydebug 
#		codec => json 
#	}

	
}
